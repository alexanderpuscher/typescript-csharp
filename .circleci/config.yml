defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.11.4

whitelist: &whitelist
  paths:
    - lib/*
    - node_modules/*
    - reports/*
    - src/*
    - tests/*
    - .npmignore
    - .prettierrc
    - CODE_OF_CONDUCT.md
    - jestconfig.json
    - LICENSE
    - package.json
    - README.md
    - tsconfig.json
    - tslint.json

version: 2.1

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run:
          name: Install Dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  lint:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Lint TypeScript code
          command: npm run lint -- -o reports/junit/js-lint-results.xml -t junit
      
      - store_test_results:
          path: reports/junit
        
      - store_artifacts:
          path: reports/junit

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist
        
  test:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: "Test TypeScript code"
          environment:
            JEST_JUNIT_OUTPUT_DIR: reports/junit
            JEST_JUNIT_OUTPUT_NAME: js-test-results.xml
          command: npm run test -- --ci --reporters=jest-junit

      - store_test_results:
          path: reports/junit
      
      - store_artifacts:
          path: reports/junit

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist
        
  build:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Build TypeScript code
          command: npm run build

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  deploy:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run: 
          name: Write NPM Token to ~/.npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - run:
          name: Publish to NPM
          command: npm publish --access=public

workflows:
  build:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - lint
      - build:
          requires:
            - test